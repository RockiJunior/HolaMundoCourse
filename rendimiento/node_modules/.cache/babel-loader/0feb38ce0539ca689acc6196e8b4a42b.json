{"ast":null,"code":"var _jsxFileName = \"/home/rockijunior/Escritorio/proyectosPersonales/HolaMundoCourse/rendimiento/src/components/Lists/MyList.js\";\nimport { memo } from 'react';\nimport { isEqual } from 'lodash'; // const Li = memo(({ fullname }) => {\n// \tconsole.log(`renderizando ${fullname}`);\n// \treturn <li>{fullname}</li>;\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Li = /*#__PURE__*/memo(_c = ({\n  children\n}) => {\n  console.log(`renderizando ${children}`);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}, isEqual); // const MyList = ({ data }) => {\n// \tconsole.log('renderizando lista');\n// \treturn (\n// \t\t<ul>\n// \t\t\t{data.map((x) => (\n// \t\t\t\t<Li key={x.name + x.lastname} fullname={`${x.name} ${x.lastname}`} />\n// \t\t\t))}\n// \t\t</ul>\n// \t);\n// };\n\n_c2 = Li;\n\nconst MyList = ({\n  data\n}) => {\n  console.log('renderizando lista');\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.map(x => /*#__PURE__*/_jsxDEV(Li, {\n      children: [x.name, \" \", x.lastname]\n    }, x.name + x.lastname, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = MyList;\nexport default MyList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Li$memo\");\n$RefreshReg$(_c2, \"Li\");\n$RefreshReg$(_c3, \"MyList\");","map":{"version":3,"sources":["/home/rockijunior/Escritorio/proyectosPersonales/HolaMundoCourse/rendimiento/src/components/Lists/MyList.js"],"names":["memo","isEqual","Li","children","console","log","MyList","data","map","x","name","lastname"],"mappings":";AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CAEA;AACA;AACA;AACA;;;AACA,MAAMC,EAAE,gBAAGF,IAAI,MACd,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAkB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeF,QAAS,EAArC;AACA,sBAAO;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAJa,EAKdF,OALc,CAAf,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAjBMC,E;;AAkBN,MAAMI,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5BH,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,sBACC;AAAA,cACEE,IAAI,CAACC,GAAL,CAAUC,CAAD,iBACT,QAAC,EAAD;AAAA,iBACEA,CAAC,CAACC,IADJ,OACWD,CAAC,CAACE,QADb;AAAA,OAASF,CAAC,CAACC,IAAF,GAASD,CAAC,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAXD;;MAAML,M;AAaN,eAAeA,MAAf","sourcesContent":["import { memo } from 'react';\nimport { isEqual } from 'lodash';\n\n// const Li = memo(({ fullname }) => {\n// \tconsole.log(`renderizando ${fullname}`);\n// \treturn <li>{fullname}</li>;\n// });\nconst Li = memo(\n\t({ children }) => {\n\t\tconsole.log(`renderizando ${children}`);\n\t\treturn <li>{children}</li>;\n\t},\n\tisEqual\n);\n\n// const MyList = ({ data }) => {\n// \tconsole.log('renderizando lista');\n// \treturn (\n// \t\t<ul>\n// \t\t\t{data.map((x) => (\n// \t\t\t\t<Li key={x.name + x.lastname} fullname={`${x.name} ${x.lastname}`} />\n// \t\t\t))}\n// \t\t</ul>\n// \t);\n// };\nconst MyList = ({ data }) => {\n\tconsole.log('renderizando lista');\n\treturn (\n\t\t<ul>\n\t\t\t{data.map((x) => (\n\t\t\t\t<Li key={x.name + x.lastname}>\n\t\t\t\t\t{x.name} {x.lastname}\n\t\t\t\t</Li>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default MyList;\n"]},"metadata":{},"sourceType":"module"}